node {
    def server = Artifactory.server 'artifactory'
    server.username = 'admin'
    server.password = '@rtifactory'

    def rtGradle = Artifactory.newGradleBuild()
    def buildInfo

    stage ('Clone') {
        git url: 'https://github.com/jeremycook123/skynet.git'
    }

    stage ('Artifactory configuration') {
        rtGradle.tool = "gradle4-10-2" // Tool name from Jenkins configuration
        rtGradle.deployer repo: 'gradle-release-local', server: server
        rtGradle.resolver repo: 'jcenter', server: server
    }

    stage ('Gradle Clean/Build/Test') {
        buildInfo = rtGradle.run rootDir: "webapp/", buildFile: 'build.gradle', tasks: 'clean build'
    }

    stage('sonar-scanner') {
      def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
      withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
        sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://34.215.139.22:9000 -Dsonar.login=${sonarLogin} -Dsonar.projectName=webapp -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=GS -Dsonar.sources=webapp/src/main/ -Dsonar.tests=webapp/src/test/ -Dsonar.java.binaries=webapp/build/**/* -Dsonar.language=java"
      }
    }

    stage ('Gradle Publish') {
        buildInfo = rtGradle.run rootDir: "webapp/", buildFile: 'build.gradle', tasks: 'artifactoryPublish'
    }

    stage ('Publish build info') {
        server.publishBuildInfo buildInfo
    }
}